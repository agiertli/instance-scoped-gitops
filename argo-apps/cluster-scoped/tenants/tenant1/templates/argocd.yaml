---
apiVersion: argoproj.io/v1beta1
kind: ArgoCD
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "25"
  labels:
    app:  {{ $.Values.tenant_name }}-gitops
  name:  {{ $.Values.tenant_name }}-gitops
  namespace:  {{ $.Values.tenant_name }}-gitops
spec:
  applicationSet:
    webhookServer:
      ingress:
        enabled: false
      route:
        enabled: false
  controller:
    appSync: 30s
  extraConfig:
    resource.customizations.health.PersistentVolumeClaim: |
      hs = {}
      if obj.status ~= nil then
        if obj.status.phase ~= nil then
          if obj.status.phase == "Pending" then
            hs.status = "Healthy"
            hs.message = obj.status.phase
            return hs
          end
          if obj.status.phase == "Bound" then
            hs.status = "Healthy"
            hs.message = obj.status.phase
            return hs
          end
        end
      end
      hs.status = "Progressing"
      hs.message = "Waiting for PVC"
      return hs
  grafana:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  ha:
    enabled: false
  monitoring:
    enabled: false
  notifications:
    enabled: true
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    defaultPolicy: role:admin
    policy: |
      g, system:cluster-admins, role:admin
    scopes: '[groups]'
  resourceExclusions: |
    - apiGroups:
        - tekton.dev
      clusters:
        - '*'
      kinds:
        - TaskRun
        - PipelineRun
  resourceHealthChecks:
  - check: |
      hs = {}
      hs.status = "Healthy"
      return hs
    group: networking.k8s.io
    kind: Ingress
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    route:
      enabled: true
      tls:
        termination: reencrypt
    service:
      type: ""
  version: v2.4.11